@model Wom.Models.CompanyModel
@{
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-ui-1.10.2.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/ajax-modules.js"></script>

<script type="text/javascript">
    SetInputNumeric('InvoiceNumber');
    SetInputMobile('CompanyMobile');
    SetInputMobile('CompanyWhatsup');
</script>
<script>
    $(function () {
        $("#DateofRegistration").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd-mm-yy"
        });
    });
</script>
<script type="text/javascript">
    // Get State List
    $(document).ready(function () {
        $("#State").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Share/StateAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.StateName, value: item.StateName, id: item.StateID };
                        }))
                    },
                })
            },
            select: function (event, ui) {
                // alert(ui.item.id);
                $("#State").val(ui.item.id);
                // $('#CusID').val(response);
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>
<script type="text/javascript">
    // Get City List
    $(document).ready(function () {
        $("#City").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Share/CityAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.CityName, value: item.CityName, id: item.CityID };
                        }))
                    },
                })
            },
            select: function (event, ui) {
                // alert(ui.item.id);
                $("#City").val(ui.item.id);
                // $('#CusID').val(response);
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>
<script type="text/javascript">
    function uploadImage(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#empPicture')
                    .attr('src', e.target.result)
                    .width(300)
                    .height(200);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

<div class="page-header animated bounceInRight">
    <div class="card">
        <div class="card-block bg-primary">
            <div class="row ">
                <div class="col-lg-4">
                    <h5 class="text-uppercase font-weight-bold">New Company</h5>
                </div>
                <div class="col-lg-8 align-items-end">
                    <div class="page-header-breadcrumb">
                        <ul class="breadcrumb-title">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Dashboard")"> <i class="icofont icofont-home" style="color:white"></i> </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Company")" style="color:white">Home / Masters / New Company</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-9 col-9"><h3>@ViewData["PageTitle"]</h3></div>
                    <div class="col-md-3 col-3">
                        <a href="@Url.Action("Index", "Company")" class="btn btn-primary btn-outline-primary float-right">
                            <i class="icofont icofont-user-alt-3"></i> Back to List
                        </a>
                    </div>
                </div>
            </div>

            <div class="card-block">
                <h4 class="sub-title">Add New Company</h4>
                @using (Html.BeginForm("Create", "Company", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyState, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.CompanyState, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyState, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.CompanyCity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.CompanyCity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyCity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.OnwerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.OnwerName, new { htmlAttributes = new { @class = "form-control", maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.OnwerName, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyMobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.CompanyMobile, new { htmlAttributes = new { @class = "form-control", maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.CompanyMobile, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.CompanyWhatsup, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.CompanyWhatsup, new { htmlAttributes = new { @class = "form-control", maxlength = "10" } })
                            @Html.ValidationMessageFor(model => model.CompanyWhatsup, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CompanyEmail, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.CompanyEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.DateofRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.DateofRegistration, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateofRegistration, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.GST, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.GST, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GST, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.InvoicePrefix, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.InvoicePrefix, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.InvoicePrefix, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <h4 class="sub-title">Bank Details</h4>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.BeneficiaryName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.BeneficiaryName, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.BeneficiaryName, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.AccountType, new List<SelectListItem>
                             {
                                 new SelectListItem { Text = "Current Account", Value = "Current Account"},
                                 new SelectListItem { Text = "Saving Account", Value = "Saving Account"},
                                 new SelectListItem {Text  = "OD Account",Value="OD Account"},
                             }, "Select", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        @Html.LabelFor(model => model.AccountIFSCCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AccountIFSCCode, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.AccountIFSCCode, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.AccountMICRCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.AccountMICRCode, new { htmlAttributes = new { @class = "form-control" }, rows = "3" })
                            @Html.ValidationMessageFor(model => model.AccountMICRCode, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyPicture, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <p>Current Picture</p>
                            <img id="empPicture" src="" alt="" class="img-fluid img-thumbnail" />
                        </div>
                        <div class="col-md-4">
                            <input type='file' name="FileUpload" onchange="uploadImage(this);" class="btn btn-success pull-right" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-12">
                            <input type="submit" value="Create" class="btn btn-primary btn-out float-right" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
