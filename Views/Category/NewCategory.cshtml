@model Wom.Models.CategoryModel

<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#uploadImage')
                    .attr('src', e.target.result)
                    .width(300)
                    .height(200);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
<script type="text/javascript">
    SetInputNumeric('Rate');
    SetInputNumeric('MinimumAdvance');
</script>

<div class="modal fade" id="categoryModel" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Category</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-block">
                                <h4 class="sub-title">Add New Category</h4>
                                @using (Html.BeginForm("Create", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                                        </div>
                                        @Html.LabelFor(model => model.MinimumAdvance, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.MinimumAdvance, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MinimumAdvance, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Notice, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Notice, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Notice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.CategoryPicture, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-4">
                                            <p>Current Picture</p>
                                            <img id="uploadImage" src="" alt="" class="img-fluid img-thumbnail" />
                                        </div>
                                        <div class="col-md-4">
                                            <input type='file' name="FileUpload" onchange="readURL(this);" class="btn btn-success pull-right" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-12">
                                            <input type="submit" value="Create" class="btn btn-primary btn-out float-right" />
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default waves-effect " data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


