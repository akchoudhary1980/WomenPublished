@model Wom.Models.CustomerModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <section class="mt-3 mb-5">
        <div class="container">


            <div class="row justify-content-center">
                <div class="col-md-8">

                    @using (Html.BeginForm("DeliveryDetails", "Home", FormMethod.Post, new { id = "deliveryform", name = "deliveryform" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.CustomerID)
                        <h4> Delivery Details </h4>

                        if (Session["UnsignError"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <strong>Error ! </strong> @Session["UnsignError"].
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        }
                        <hr />
                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-4", @readonly = "readonly" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control rounded-0" } })
                                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control rounded-0" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control rounded-0" } })
                                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.Pin, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Pin, new { htmlAttributes = new { @class = "form-control rounded-0" } })
                                @Html.ValidationMessageFor(model => model.Pin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control rounded-0" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control rounded-0" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row mb-2">
                            @Html.LabelFor(model => model.AddressType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.AddressType, "Home", new { htmlAttributes = new { @class = "form-control" } }) Home
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.AddressType, "Office", new { htmlAttributes = new { @class = "form-control" } }) Office
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.AddressType, "Others", new { htmlAttributes = new { @class = "form-control" } }) Others
                                </label>
                            </div>
                        </div>

                        <div class="form-group row mb-2 rounded-0">
                            @Html.LabelFor(model => model.DeliveryTime, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.DeliveryTime,
                                Neel.Controllers.CustomerController.DeliveryTime(), new { @class = "form-control rounded-0" })
                                @Html.ValidationMessageFor(model => model.DeliveryTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <input type="submit" value="Countinue" class="more-product float-end mb-2" />
                    }

                </div>
            </div>
        </div>
    </section>
                         