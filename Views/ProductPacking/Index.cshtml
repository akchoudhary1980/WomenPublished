@model Wom.Models.ProductPackingModel
@{
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<!--for Product Auto Complete-->
<script type="text/javascript">
    $(document).ready(function () {
        $("#Product").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Share/ProductNameAutoComplete",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.ProductName, value: item.ProductName, id: item.ProductID };
                        }))
                    },
                })
            },
            select: function (event, ui) {
                $("#ProductHiddenID").val(ui.item.id);
                $("#ProductName").val(ui.item.value);
            }
        });
    })
</script>

<!--for Add Trans Data-->
<script type="text/javascript">

    function InsertRow() {
        var productid = $('#ProductHiddenID').val();
        var sizeid = $('#SizeID').val();
        var colorid = $('#ColorID').val();
        var rate = $('#Rate').val();
        var stock = $('#Stock').val();

        if (productid == "0") {
            alert('Please select the product first !');
        }
        else
        {

            $.ajax({
            type: 'POST',
            url: '@Url.Action("AddTransData")',
            dataType: 'json',
            data: { ProductID: productid, SizeID: sizeid, ColorID: colorid, Rate: rate, Stock: stock },
            success: function (data) {
                DisplayData(data);
              }
            });
        }
    }
</script>

<!--for RemoveData-->
<script type="text/javascript">
    function removeItem(serno) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("RemoveTransData")',
            dataType: 'json',
            data: {iSer:serno},
            success: function (data) {
                DisplayData(data);
            }
        });
    }
</script>
<!--for Load Data-->
<script type="text/javascript">
    // define here call here
    function LoadTransData() {
        var productid = $('#ProductHiddenID').val();
        // aign here
        $.ajax({
            type: 'POST',
            url: '@Url.Action("LoadTransData")',
            dataType: 'json',
            data: { productID: productid},
            success: function (data) {
                DisplayData(data);
            }
        });
    }
</script>
<!--for Display Data-->
<script type="text/javascript">
    function DisplayData(data) {
        var productid = $('#ProductHiddenID').val();
        if (productid == "0") {
            alert('Please select the product first !');
        }
        else {
            //var product = $('#ProductName').val();
            var counter = 0;
            $("#estTable tbody tr").remove();

            $.each(data, function (i, item) {
                counter = counter + 1;
                var rows = "<tr>"
                    + "<td>" + counter + "</td>"
                    + "<td>" + item.SerNo + "</td>"
                    + "<td class='text-left'>" + item.ProductName + "</td>"
                    + "<td class='text-left'>" + item.SizeID + "</td>"
                    + "<td class='text-left'>" + item.ColorID + "</td>"
                    + "<td class='text-right'>" + item.Rate + "</td>"
                    + "<td class='text-right'>" + item.Stock + "</td>"
                    + "<td><button type='button' id=" + item.SerNo + " onclick='removeItem(this.id)' class='btn btn-danger btn-mini btn-outline-primary'><i class='icofont icofont-ui-close'></i></button></td>"
                    + "</tr>";
                $('#estTable tbody').append(rows);
            });
            //alert('You have select the product : ' + product);
        }
    }
</script>

<div class="page-header animated bounceInRight">
    <div class="card">
        <div class="card-block bg-primary">
            <div class="row ">
                <div class="col-lg-4">
                    <h5 class="text-uppercase font-weight-bold">Product Packing</h5>
                </div>
                <div class="col-lg-8 align-items-end">
                    <div class="page-header-breadcrumb">
                        <ul class="breadcrumb-title">
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "Dashboard")"> <i class="icofont icofont-home" style="color:white"></i> </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "ProductPacking")" style="color:white">Home / Masters / Color List</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row animated bounceInUp">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-12">
                        <h4>@ViewData["PageTitle"]</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">

                        <div class="form-group row">
                            @Html.Label("", "Product Name", new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBox("Product", "", new { @class = "form-control" })
                                @Html.Hidden("ProductHiddenID", "0")
                            </div>

                        </div>
                        <di class="form-group row">
                            @Html.Label("", "Selected Product", new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBox("ProductName", "", new { @class = "form-control", @readonly = "readonly" })
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-primary btn-outline-primary float-right" type="button" onclick="LoadTransData();"><i class="icofont icofont-search"></i></button>
                            </div>
                        </di>
                    </div>
                </div>
            </div>
            <div class="card-block">
                @using (Html.BeginForm("Index", "ProductPacking", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col-sm-3">
                            <label class=" form-control-label">Size</label>
                            @Html.DropDownListFor(model => model.SizeID,
                             Wom.Controllers.ProductPackingController.GetSizeList(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SizeID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-3">
                            <label class=" form-control-label">Color</label>
                            @Html.DropDownListFor(model => model.ColorID,
                             Wom.Controllers.ProductPackingController.GetColorList(), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-2">
                            <label class=" form-control-label">Rate</label>
                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-2">
                            <label class="form-control-label">Stock</label>
                            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-2">
                            <label class=" form-control-label">Add</label>
                            <br />
                            <button class="btn btn-primary btn-outline-primary" type="button" onclick="InsertRow();"><i class="icofont icofont-plus"></i></button>
                        </div>
                    </div>

                    <br />
                    <h5>Product Packing Details</h5>
                    <hr />
                    <div class='dt-responsive table-responsive'>
                        <table id='estTable' class='table table-striped table-bordered nowrap'>
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>SerNo</th>
                                    <th>Product Name</th>
                                    <th>Size</th>
                                    <th>Color</th>
                                    <th>Rate</th>
                                    <th>Stock</th>
                                    <th>Del</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12">
                            <input type="submit" value="Update" class="btn btn-primary btn-out float-right" />
                        </div>
                    </div>


                }

            </div>
        </div>
    </div>
</div>
